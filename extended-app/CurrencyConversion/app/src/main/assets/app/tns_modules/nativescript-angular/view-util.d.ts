import { View } from "tns-core-modules/ui/core/view";
import { Placeholder } from "tns-core-modules/ui/placeholder";
import { ContentView } from "tns-core-modules/ui/content-view";
import { LayoutBase } from "tns-core-modules/ui/layouts/layout-base";
import { ViewExtensions, NgView } from "./element-registry";
import { Device } from "tns-core-modules/platform";
export declare type ViewExtensions = ViewExtensions;
export declare type NgView = NgView;
export declare type NgLayoutBase = LayoutBase & ViewExtensions;
export declare type NgContentView = ContentView & ViewExtensions;
export declare type NgPlaceholder = Placeholder & ViewExtensions;
export declare type BeforeAttachAction = (view: View) => void;
export declare function isView(view: any): view is NgView;
export declare function isLayout(view: any): view is NgLayoutBase;
export declare function isContentView(view: any): view is NgContentView;
export declare class ViewUtil {
    private isIos;
    private isAndroid;
    constructor(device: Device);
    insertChild(parent: any, child: NgView, atIndex?: number): void;
    removeChild(parent: any, child: NgView): void;
    getChildIndex(parent: any, child: NgView): number;
    createComment(): NgView;
    createText(): NgView;
    createView(name: string): NgView;
    setProperty(view: NgView, attributeName: string, value: any, namespace?: string): void;
    nextSiblingIndex(node: NgView): number;
    private runsIn(platform);
    private setPropertyInternal(view, attributeName, value);
    private convertValue(value);
    private getProperties(instance);
    private cssClasses(view);
    addClass(view: NgView, className: string): void;
    removeClass(view: NgView, className: string): void;
    private setClasses(view, classesValue);
    private syncClasses(view);
    setStyle(view: NgView, styleName: string, value: any): void;
    removeStyle(view: NgView, styleName: string): void;
}
